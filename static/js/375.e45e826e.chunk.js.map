{"version":3,"file":"static/js/375.e45e826e.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,QAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mPAafC,EAAiBH,EAAAA,QAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iMAc3BG,EAAwBL,EAAAA,QAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gC,SCxBhC,SAASK,IAAgB,IAADC,EAAAC,EAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAG9BI,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,MAEnDgB,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBf,GACbgB,MAAK,SAAAC,GAAQ,OAAIV,EAAgBU,EAASC,KAAK,IAC/CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAAQ,IACrCC,SACL,GAAG,CAACxB,IAEJ,IAAQyB,EACNnB,EADMmB,YAAaC,EACnBpB,EADmBoB,MAAOC,EAC1BrB,EAD0BqB,aAAcC,EACxCtB,EADwCsB,SAAUC,EAClDvB,EADkDuB,OAAQC,EAC1DxB,EAD0DwB,aAGtDC,EADO,IAAIC,KAAKF,GACJG,cAElB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI5B,EAAY6B,QAAQJ,UAC5BC,EAAAA,EAAAA,KAAC/C,EAAI,CAAA8C,SAAC,eAERD,EAAAA,EAAAA,MAACzC,EAAc,CAAA0C,SAAA,EACZC,EAAAA,EAAAA,KAAA,OAAKI,IAxBO,kCAwBWf,EAAagB,IAAKf,KAC1CQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGT,EAAM,KAAGK,EAAK,QAEjBG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaR,SAElBO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,QAENM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SACS,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQa,KAAI,SAAAC,GAAK,OAChBP,EAAAA,EAAAA,KAAA,MAAAD,SAAsBQ,EAAMC,MAAnBD,EAAMC,KAAuB,gBAMhDV,EAAAA,EAAAA,MAACvC,EAAqB,CAAAwC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,OAASH,SAAC,YAEpBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,UAAYH,SAAC,kBAGzBC,EAAAA,EAAAA,KAACS,EAAAA,GAAM,SAIf,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Back = styled.p`\n  display: block;\n  width: 100px;\n  height: 35px;\n  border: 1px solid black;\n  border-radius: 5px;\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n  background-color: antiquewhite;\n  margin: 25px 0px 0px 25px;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-bottom: 1px solid black;\n  img {\n    display: block;\n    width: 300px;\n    margin: 25px;\n  }\n  div {\n    width: 500px;\n  }\n`;\n\nexport const AdditionalInformation = styled.div`\n  margin-left: 25px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'api';\nimport { AdditionalInformation, Back, MovieContainer } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState('');\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\n  const location = useLocation();\n\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(response => setMovieDetails(response.data))\n      .catch(err => console.log(err.message))\n      .finally();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movieDetails;\n  const date = new Date(release_date);\n  const year = date.getFullYear();\n\n  return (\n    <div>\n      <Link to={backLinkRef.current}>\n        <Back>Go back</Back>\n      </Link>\n      <MovieContainer>\n        {<img src={baseImgUrl + poster_path} alt={title} />}\n        <div>\n          <div>\n            <h2>\n              {title} ({year})\n            </h2>\n            <p>User score: {vote_average}</p>\n          </div>\n          <div>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <ul>\n              {genres?.map(genre => (\n                <li key={genre.name}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </MovieContainer>\n      <AdditionalInformation>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to={`cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`reviews`}>Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </AdditionalInformation>\n    </div>\n  );\n}\n"],"names":["Back","styled","_templateObject","_taggedTemplateLiteral","MovieContainer","_templateObject2","AdditionalInformation","_templateObject3","MovieDetails","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","then","response","data","catch","err","console","log","message","finally","poster_path","title","vote_average","overview","genres","release_date","year","Date","getFullYear","_jsxs","children","_jsx","Link","to","current","src","alt","map","genre","name","Outlet"],"sourceRoot":""}