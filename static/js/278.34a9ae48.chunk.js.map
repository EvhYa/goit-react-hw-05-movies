{"version":3,"file":"static/js/278.34a9ae48.chunk.js","mappings":"4OAIe,SAASA,IAAU,IAADC,EAC/BC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAEjBI,GAAWC,EAAAA,EAAAA,MAElBC,GAA0CC,EAAAA,EAAAA,MAAiBC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAApDG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,EAAkC,QAA7Bd,EAAGY,EAAcG,IAAI,gBAAQ,IAAAf,EAAAA,EAAI,GAe5C,OACEgB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAVY,SAAAC,GACpBA,EAAEC,kBACFC,EAAAA,EAAAA,IAAiBP,GACdQ,MAAK,SAAAC,GAAQ,OAAIjB,EAAUiB,EAASC,KAAKC,QAAQ,IACjDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAAQ,IACrCC,SACL,EAIkCd,SAAA,EAC5Be,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOpB,EAAOqB,SAhBb,SAAAhB,GACxB,IAAMiB,EAAgC,KAAnBjB,EAAEkB,OAAOH,MAAe,CAAEpB,MAAOK,EAAEkB,OAAOH,OAAU,CAAC,EACxErB,EAAiBuB,EACnB,KAcMJ,EAAAA,EAAAA,KAAA,UAAAf,SAAQ,eAEVe,EAAAA,EAAAA,KAAA,MAAAf,SACGZ,EAAOiC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAaH,EAAbG,cAAa,OAC9CV,EAAAA,EAAAA,KAAA,MAAAf,UACEe,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKL,GAAMM,MAAO,CAACC,KAAMxC,GAAUU,SAAgB,OAAdwB,QAAc,IAAdA,EAAAA,EAAkBC,KADxDF,EAEJ,QAKf,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { getSearchedMovie } from 'api';\nimport {  useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n\n   const location = useLocation();\n\n  const [searchedMovie, setSearchedMovie] = useSearchParams();\n  const query = searchedMovie.get('query') ?? '';\n\n  const updateQueryString = e => {\n    const nextParams = e.target.value !== '' ? { query: e.target.value } : {};\n    setSearchedMovie(nextParams);\n  };\n\n  const onMovieSearch = e => {\n    e.preventDefault();\n    getSearchedMovie(query)\n      .then(response => setMovies(response.data.results))\n      .catch(err => console.log(err.message))\n      .finally();\n  };\n\n  return (\n    <div>\n      <form onSubmit={onMovieSearch}>\n        <input type=\"text\" value={query} onChange={updateQueryString} />\n        <button>Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, original_title, original_name }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{from: location}}>{original_title ?? original_name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Movies","_searchedMovie$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchedMovie","setSearchedMovie","query","get","_jsxs","children","onSubmit","e","preventDefault","getSearchedMovie","then","response","data","results","catch","err","console","log","message","finally","_jsx","type","value","onChange","nextParams","target","map","_ref","id","original_title","original_name","Link","to","concat","state","from"],"sourceRoot":""}