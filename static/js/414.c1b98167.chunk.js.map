{"version":3,"file":"static/js/414.c1b98167.chunk.js","mappings":"2LAEO,SAASA,EAAUC,GAAkC,IAA/BC,EAAUD,EAAVC,WAAYC,EAAQF,EAARE,SAAUC,EAAIH,EAAJG,KACjD,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAWK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAaH,EAAbG,cAAa,OAClDN,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKV,EAAOK,GAAMM,MAAO,CAAEC,KAAMb,GAAWG,SACnC,OAAdI,QAAc,IAAdA,EAAAA,EAAkBC,KAFdF,EAIJ,KAIb,C,kGCdO,SAASQ,EAAIhB,GAA+C,IAA5CiB,EAAajB,EAAbiB,cAAgCjB,EAAjBkB,kBAAwBlB,EAALmB,MACvD,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUJ,EAAcZ,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,SAAOkB,KAAK,OAAQC,KAAK,WACzBnB,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,aAGd,C,uCCDe,SAASmB,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBzB,GAAW6B,EAAAA,EAAAA,MAEjBC,GAA0CC,EAAAA,EAAAA,MAAiBC,GAAAN,EAAAA,EAAAA,GAAAI,EAAA,GAApDG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GA4BtC,OAPAG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACRnB,EAAkC,QAA7BmB,EAAGH,EAAcI,IAAI,gBAAQ,IAAAD,EAAAA,EAAI,IAC5CE,EAAAA,EAAAA,IAAiBrB,GACdsB,MAAK,SAAAC,GAAQ,OAAIZ,EAAUY,EAASC,KAAKC,QAAQ,IACjDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,QAAQ,GAC1C,GAAG,CAACd,KAGFf,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACED,EAAAA,EAAAA,KAACY,EAAI,CACHC,cArBgB,SAAAiC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfjB,EAAiB,CAAEjB,MAAOiC,EAAKE,SAASnC,MAAMoC,QAC9CH,EAAKI,OAKP,KAeIpD,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,WAAY4B,EAAQ3B,SAAUA,EAAUC,KAAM,OAGhE,C","sources":["components/MoviesList/MoviesList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport function MoviesList({ moviesData, location, link }) {\n  return (\n    <ul>\n      {moviesData.map(({ id, original_title, original_name }) => (\n        <li key={id}>\n          <Link to={`${link + id}`} state={{ from: location }}>\n            {original_title ?? original_name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","export function Form({ onMovieSearch, updateQueryString, query }) {\n  return (\n    <form onSubmit={onMovieSearch}>\n      <input type=\"text\"  name='query' />\n      <button>Search</button>\n    </form>\n  );\n}","import { getSearchedMovie } from 'api';\nimport { Form } from 'components/Form/Form';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  const [searchedMovie, setSearchedMovie] = useSearchParams();\n  \n\n  // const updateQueryString = e => {\n  //   const nextParams = e.target.value !== '' ? { query: e.target.value } : {};\n  //   setSearchedMovie(nextParams);\n  // };\n \n \n  \n  const onMovieSearch = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchedMovie({ query: form.elements.query.value });\n    form.reset();\n\n    // getSearchedMovie(query)\n    //   .then(response => setMovies(response.data.results))\n    //   .catch(err => console.log(err.message));\n  };\n\n  useEffect(() => {\n    const query = searchedMovie.get('query') ?? '';\n    getSearchedMovie(query)\n      .then(response => setMovies(response.data.results))\n      .catch(err => console.log(err.message));\n  }, [searchedMovie]);\n\n  return (\n    <div>\n      <Form\n        onMovieSearch={onMovieSearch}\n        // updateQueryString={updateQueryString}\n      />\n      <MoviesList moviesData={movies} location={location} link={''} />\n    </div>\n  );\n}\n"],"names":["MoviesList","_ref","moviesData","location","link","_jsx","children","map","_ref2","id","original_title","original_name","Link","to","concat","state","from","Form","onMovieSearch","updateQueryString","query","_jsxs","onSubmit","type","name","Movies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchedMovie","setSearchedMovie","useEffect","_searchedMovie$get","get","getSearchedMovie","then","response","data","results","catch","err","console","log","message","e","preventDefault","form","currentTarget","elements","value","reset"],"sourceRoot":""}